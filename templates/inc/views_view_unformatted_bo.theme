<?php
use Drupal\bo\Entity\BoEntity;
use Drupal\Core\Cache\Cache;

/**
 * Prepares variables for views unformatted rows templates.
 *
 * Default template: views-view-unformatted-bo.html.twig.
 *
 * @param array $vars
 *   An associative array containing:
 *   - view: The view object.
 *   - rows: An array of row items. Each row is an array of content.
 */

function bo_preprocess_views_view_unformatted_bo(&$vars) {
  /** @var \Drupal\bo\Service\BoVars $boVars */
  $boVars = \Drupal::service('bo.vars');

  $vars['attributes'] = new Attribute();

  $view = $vars['view'];
  $current_display = $view->getDisplay();

  $rows = $vars['rows'];
  $style = $view->style_plugin;
  $options = $style->options;

  $view_collection_id = $view->filter["bo_current_collection_id_filter"]->value;
  if (intval($view_collection_id) > 0) {
    $view_collection_entity = BoEntity::load($view_collection_id);

    /** @var \Drupal\bo\Service\BoBundle $boBundle */
    $boBundle = \Drupal::service('bo.bundle');

    /** @var \Drupal\bo\Entity\BoBundle $view_collection_bundle */
    $view_collection_bundle = $boBundle->getBundle($view_collection_entity->getBundle());

    $fields = $view_collection_entity->getFields();

    foreach ($fields as $field_name => $field) {

      if ($field_name != "bundle" &&
        $field_name != "id" &&
        $field_name != "size" &&
        $field_name != "display_id" &&
        $field_name != "changed" &&
        $field_name != "weight") {
        if ($field_name == "title") {
          if ($view_collection_bundle->getInternalTitle() == true) {
              continue;
          }
        }

        if ($view_collection_entity->hasField($field_name)) {
          $empty_array = [];
          $element = $boVars->processField($view_collection_entity, $field_name, $vars, 0, $empty_array);
          $vars["bo"][$field_name] = $element;
        }
      }
    }
  }

  $vars['default_row_class'] = !empty($options['default_row_class']);
  foreach ($rows as $id => $row) {
    if ($row_class = $view->style_plugin->getRowClass($id)) {
      $vars['rows'][$id]['attributes'][] = $row_class;
    }

    $entity = $view->result[$id]->_entity;
    if ($entity) {
      $boVars->getVariables(
        $view,
        $view->result[$id],
        $vars, [
          'basic',
          'fields',
        ]
      );

      $operations = NULL;
      $boVars->getRenderedViewFields($current_display, $view->result[$id], "bo_operations", $operations);
      $vars["bo"]["operations"] = $operations["rendered"]["view_bo_operations"];

      if ($vars["bo"]) {
        $vars["bo"]["row_index"] = $id;

        // Add the entity data to the $vars variable.
        $vars["bo"]["collection"][] = $vars["bo"];
      }

      $cacheTags = $entity->getCacheTags();
      $vars["#cache"]["tags"][] = $cacheTags[0];
    }
  }
}
