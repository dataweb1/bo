<?php

/**
 * Prepares variables for views unformatted rows templates.
 *
 * Default template: views-view-bo.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - view: The view object.
 *   - rows: An array of row items. Each row is an array of content.
 */

function bo_preprocess_views_view_bo(&$variables) {
    /** @var \Drupal\views\ViewExecutable $view */
    $view = &$variables["view"];
    $display_plugin = $view->display_handler->display['display_plugin'];
    $variables['attributes'] = [];
    $variables['attributes']['class'][] = 'bo-overview';
    $variables['attributes']['class'][] = 'bo-overview-'.$display_plugin;
    //$variables['dom_id'] = $view->dom_id;
    $variables['attributes']['data-view-dom-id'] = $view->dom_id;;

    $collection_id = $view->filter['bo_current_collection_id_filter']->value;
    $variables['attributes']['data-collection-id'] = $collection_id;

    /** @var \Drupal\bo\Service\BoCollection $boCollection */
    $boCollection = \Drupal::service('bo.collection');
    $variables['attributes']['data-reload'] = (int)$boCollection->getCollectionReload($collection_id);

    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      $nid = $node->id();
    }
    else {
      $nid = \Drupal::request()->query->get('nid');
    }
    $variables['attributes']['data-nid'] = $nid;
}
